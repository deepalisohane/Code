// gcd
int gcd(int a,int b) { if (a == 0) return b; return gcd(b%a, a);}

//lcm
int lcm(int a, int b){return (a / gcd(a, b)) * b;}

// ceil value
int ceilVal(int a,int b){return (a/b)+((a%b)!=0);}

// digit square sum
  int digitSqSum(int n){
      int sum = 0;
      while(n > 0){
          sum = sum + ((n%10)*(n%10));
          n=n/10;
      }
      return sum;
  }
  
// Sieve
    bool prime[500001];
    void SieveOfEratosthenes(){
      memset(prime, true, sizeof(prime));
      int n = 500000;
      for (int p = 2; p * p <= n; p++) {
          if (prime[p] == true) {
              for (int i = p * p; i <= n; i += p)
                  prime[i] = false;
          }
      }
    }
    
