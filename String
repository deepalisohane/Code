//std::string::find_first_not_of in C++
It searches the string for the first character that does not match any of the characters specified in its arguments
Return value : Index of first unmatched character when successful or string::npos if no such character found.
    bool check(string &s){
        return s.find_first_not_of("0123456789")==string::npos;
    } //-> means every chars of s is consisted of digits only.
    
vortrubac soln: https://leetcode.com/problems/count-collisions-on-a-road/description/
//will give index 1 & 2 if s = "LRSR";
    int l = d.find_first_not_of("L"), r = d.find_last_not_of("R"); 
    return l == string::npos || r == string::npos ? 0 : 
        count_if(begin(d) + l, begin(d) + r + 1, [](char ch){ return ch != 'S';});
}    
    
//Split a sentence into words. words are separated by space
    istringstream ss(str);
    string word; 
    while (ss >> word) {
        // "word" me ek ek krke sare words aate jayenge.
    }
    
 //Parse a comma-separated string
     vector<string> v;
     stringstream ss(str);
     while (ss.good()) {
        string substr;
        getline(ss, substr, ',');
        v.push_back(substr);
     }
// vowels 
vow[26] = {1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0};

